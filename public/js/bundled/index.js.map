{"mappings":"wEAEO,MAAMA,EAAS,KACpB,MAAMC,EAAKC,SAASC,cAAc,UAC9BF,GAAIA,EAAGG,cAAcC,YAAYJ,IAI1BK,EAAS,CAAIC,EAAMC,KAC9BR,IAEA,MAAMS,EAAM,4BAA+BF,iBAC3CL,SAASC,cAAc,QAAQO,mBAAmB,aAAcD,GAChEE,OAAOC,WAAWZ,EAAW,MCX/B,MCIaa,EAAcC,MAAUC,EAAMR,KACzC,IAS0B,mBARNS,EAAAC,EAAA,CAAM,CACtBC,OAAQ,QACRC,IAAG,kBACQ,aAATZ,EAAsB,mBAAqB,iBAE7CQ,KAGMA,KAAKK,QACXd,EAAU,UAAcC,EAAKc,eAE/B,MAAOC,GACPhB,EAAU,QAASgB,EAAIC,SAASR,KAAKS,WCXnCC,EAASvB,SAASwB,eAAe,OACjCC,EAAYzB,SAASC,cAAc,gBACnCyB,EAAY1B,SAASC,cAAc,oBACnC0B,EAAe3B,SAASC,cAAc,mBACtC2B,EAAmB5B,SAASC,cAAc,uBAC1C4B,EAAU7B,SAASwB,eAAe,aAGxC,GAAID,EAAQ,CACV,MAAMO,EAAYC,KAAKC,MAAMT,EAAOU,QAAQH,gBAE5CI,WAAWJ,GAGTL,GACFA,EAAUU,iBAAiB,UAAWC,IACpCA,EAAEC,iBCpBYzB,OAAU0B,EAAOC,KAGjC,IAU6B,mBATNzB,EAAAC,EAAA,CAAM,CACzBC,OAAQ,OACRC,IAAK,sBACLJ,KAAM,OACJyB,WACAC,MAIO1B,KAAKK,SACdd,EAAU,WACVK,OAAOC,YAAU,KACf8B,SAASC,OAAO,OACf,OAEL,MAAOrB,GACPhB,EAAU,QAASgB,EAAIC,SAASR,KAAKS,WDKrCoB,CAHc1C,SAASwB,eAAe,SAASmB,MAC9B3C,SAASwB,eAAe,YAAYmB,UAMrDjB,GAAWA,EAAUS,iBAAiB,SCLvBvB,UACjB,IAK0B,mBAJNE,EAAAC,EAAA,CAAM,CACtBC,OAAQ,MACRC,IAAK,0BAECJ,KAAKK,QAAsBsB,SAASI,QAAO,GACnD,MAAOxB,GACPhB,EAAU,aDDVuB,GACFA,EAAaQ,iBAAiB,UAAWC,IACvCA,EAAEC,iBACF,MAAMQ,EAAO,IAAIC,SACjBD,EAAKE,OAAO,OAAQ/C,SAASwB,eAAe,QAAQmB,OACpDE,EAAKE,OAAO,QAAS/C,SAASwB,eAAe,SAASmB,OACtDE,EAAKE,OAAO,QAAS/C,SAASwB,eAAe,SAASwB,MAAM,IAO5DrC,EAAekC,EAAM,WAIrBjB,GACFA,EAAiBO,iBAAiB,UAAQvB,MAASwB,IACjDA,EAAEC,iBAEFrC,SAASC,cAAc,uBAAuBgD,YAAc,cAE5D,MAAMC,EAAkBlD,SAASwB,eAAe,oBAAoBmB,MAC9DJ,EAAWvC,SAASwB,eAAe,YAAYmB,MAC/CQ,EAAkBnD,SAASwB,eAAe,oBAAoBmB,YAE9DhC,EACJ,iBAAEuC,WAAiBX,kBAAUY,GAC7B,YAGFnD,SAASC,cAAc,uBAAuBgD,YAAc,gBAC5DjD,SAASwB,eAAe,oBAAoBmB,MAAQ,GACpD3C,SAASwB,eAAe,YAAYmB,MAAQ,GAC5C3C,SAASwB,eAAe,oBAAoBmB,MAAQ,MAIpDd,GACFA,EAAQM,iBAAiB,SAAUC,IACjCA,EAAEgB,OAAOH,YAAc,gBAEvB,MAAOI,OAACA,GAAWjB,EAAEgB,OAAOnB,QE1EXrB,OAAUyC,IAC7B,MAAMC,EAASC,OACb,+GAEF,IAEE,MAAMC,QAAgB1C,EAAAC,EAAA,CAAK,oCAAqCsC,WAI1DC,EAAOG,mBAAmB,CAC9BC,UAAWF,EAAQ3C,KAAK2C,QAAQG,KAElC,MAAOvC,GACPwC,QAAQC,IAAIzC,GACZhB,EAAU,WF4DV0D,CAAST","sources":["public/js/alerts.js","public/js/mapbox.js","public/js/updateSettings.js","public/js/index.js","public/js/login.js","public/js/stripe.js"],"sourcesContent":["/* eslint-disable */\n\nexport const hideAlert = () => {\n  const el = document.querySelector('.alert');\n  if (el) el.parentElement.removeChild(el);\n};\n\n// type is 'success' or 'error'\nexport const showAlert = (type, msg) => {\n  hideAlert();\n\n  const markup = `<div class=\"alert alert--${type}\">{msg}</div>`;\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n  window.setTimeout(hideAlert, 5000);\n};\n","/* eslint-disable */\n\nconst displayMap = (locations) => {\n  mapboxgl.accessToken =\n    'pk.eyJ1IjoiaGFzc2FubWFrMjkiLCJhIjoiY2t4Z25yN3RmMms0dTMwbzE3MzVsZmg2cSJ9.Txb7-sbSByU7yu5Crownbw';\n  var map = new mapboxgl.Map({\n    container: 'map',\n    style: 'mapbox://styles/hassanmak29/ckxgo6rad4fxb14oexkpe9lxl',\n    scrollZoom: false,\n    //   center: [-118.113491, 34.111745],\n    //   zoom: 8,\n    //   interactive: false,\n  });\n\n  const bounds = new mapboxgl.LngLatBounds();\n\n  locations.forEach((loc) => {\n    // Create marker\n    const el = document.createElement('div');\n    el.className = 'marker';\n\n    //   Add marker\n    new mapboxgl.Marker({\n      element: el,\n      anchor: 'bottom',\n    })\n      .setLngLat(loc.coordinates)\n      .addTo(map);\n\n    // Add popup\n    new mapboxgl.Popup({\n      offset: 30,\n    })\n      .setLngLat(loc.coordinates)\n      .setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`)\n      .addTo(map);\n\n    //   Exrtend the map bounds to include the current location\n    bounds.extend(loc.coordinates);\n  });\n\n  map.fitBounds(bounds, {\n    padding: {\n      top: 180,\n      bottom: 100,\n      left: 100,\n      right: 100,\n    },\n  });\n};\n","// UpdateData\n/*eslint-disable */\nimport axios from 'axios';\nimport { showAlert } from './alerts';\n\n// type is either 'password' or 'data'\nexport const updateSettings = async (data, type) => {\n  try {\n    const res = await axios({\n      method: 'PATCH',\n      url: `/api/v1/users/${\n        type === 'password' ? 'updateMyPassword' : 'updateMe'\n      }`,\n      data,\n    });\n\n    if (res.data.status === 'success') {\n      showAlert('success', `${type.toUpperCase()} updated successefully`);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n","/* eslint-disable */\n\nimport 'regenerator-runtime/runtime';\nimport { login, logout } from './login';\nimport { displayMap } from './mapbox';\nimport { updateSettings } from './updateSettings';\nimport { bookTour } from './stripe';\n\n//DOM ELEMENTS\nconst mapBox = document.getElementById('map');\nconst loginForm = document.querySelector('.form--login');\nconst logOutBtn = document.querySelector('.nav__el--logout');\nconst userDataForm = document.querySelector('.form-user-data');\nconst userPasswordForm = document.querySelector('.form-user-password');\nconst bookBtn = document.getElementById('book-tour');\n\n// DELEGATION\nif (mapBox) {\n  const locations = JSON.parse(mapBox.dataset.locations);\n\n  displayMap(locations);\n}\n\nif (loginForm) {\n  loginForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n\n    login(email, password);\n  });\n}\n\nif (logOutBtn) logOutBtn.addEventListener('click', logout);\n\nif (userDataForm) {\n  userDataForm.addEventListener('submit', (e) => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append('name', document.getElementById('name').value);\n    form.append('email', document.getElementById('email').value);\n    form.append('photo', document.getElementById('photo').files[0]);\n    // console.log(form);\n\n    // const name = document.getElementById('name').value;\n    // const email = document.getElementById('email').value;\n\n    // updateSettings({ name, email }, 'data');\n    updateSettings(form, 'data');\n  });\n}\n\nif (userPasswordForm) {\n  userPasswordForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n\n    document.querySelector('.btn--save-password').textContent = 'Updating...';\n\n    const passwordCurrent = document.getElementById('password-current').value;\n    const password = document.getElementById('password').value;\n    const passwordConfirm = document.getElementById('password-confirm').value;\n\n    await updateSettings(\n      { passwordCurrent, password, passwordConfirm },\n      'password'\n    );\n\n    document.querySelector('.btn--save-password').textContent = 'Save password';\n    document.getElementById('password-current').value = '';\n    document.getElementById('password').value = '';\n    document.getElementById('password-confirm').value = '';\n  });\n}\n\nif (bookBtn) {\n  bookBtn.addEventListener('click', (e) => {\n    e.target.textContent = 'Processing...';\n    // const tourId = e.target.dataset.tourId;\n    const { tourId } = e.target.dataset;\n    bookTour(tourId);\n  });\n}\n","/* eslint-disable*/\n\nimport axios from 'axios';\nimport { showAlert } from './alerts';\n\nexport const login = async (email, password) => {\n  // console.log('LOGIN');\n  // console.log(email, password);\n  try {\n    const result = await axios({\n      method: 'POST',\n      url: '/api/v1/users/login',\n      data: {\n        email,\n        password,\n      },\n    });\n\n    if (result.data.status === 'success') {\n      showAlert('success', 'Logged in successfully');\n      window.setTimeout(() => {\n        location.assign('/');\n      }, 1500);\n    }\n  } catch (err) {\n    showAlert('error', err.response.data.message);\n  }\n};\n\nexport const logout = async () => {\n  try {\n    const res = await axios({\n      method: 'GET',\n      url: '/api/v1/users/logout',\n    });\n    if (res.data.status === 'success') location.reload(true);\n  } catch (err) {\n    showAlert('error', 'Error logging out! Try again!');\n  }\n};\n","/*eslint-disable*/\n\nimport axios from 'axios';\nimport { showAlert } from './alerts';\n\nexport const bookTour = async (tourId) => {\n  const stripe = Stripe(\n    'pk_test_51KDFGVHzIzfHChM880b4767h5adpghBKWSYXpvy8X1SWYr7ZFkGOCeRrSdlJU85bDNwjwmdFJlSLeFb9OvUc8niU00L0xKCXTl'\n  );\n  try {\n    // 1)Get checkout session from API\n    const session = await axios(`/api/v1/booking/checkout-session/${tourId}`);\n    // console.log(session);\n\n    // 2) Create checkout form + charge credit cart\n    await stripe.redirectToCheckout({\n      sessionId: session.data.session.id,\n    });\n  } catch (err) {\n    console.log(err);\n    showAlert('error', err);\n  }\n};\n"],"names":["$7dc87b7f457e655a$export$516836c6a9dfc573","el","document","querySelector","parentElement","removeChild","$7dc87b7f457e655a$export$de026b00723010c1","type","msg","markup","insertAdjacentHTML","window","setTimeout","$955535ce7513e32c$export$f558026a994b6051","async","data","$parcel$interopDefault","$cnf0l$axios","method","url","status","toUpperCase","err","response","message","$407eccdc61ba7a94$var$mapBox","getElementById","$407eccdc61ba7a94$var$loginForm","$407eccdc61ba7a94$var$logOutBtn","$407eccdc61ba7a94$var$userDataForm","$407eccdc61ba7a94$var$userPasswordForm","$407eccdc61ba7a94$var$bookBtn","locations","JSON","parse","dataset","displayMap","addEventListener","e","preventDefault","email","password","location","assign","$bf5b431e6a69fea8$export$596d806903d1f59e","value","reload","form","FormData","append","files","textContent","passwordCurrent","passwordConfirm","target","tourId","stripe","Stripe","session","redirectToCheckout","sessionId","id","console","log","$9fd71c92b6f885af$export$8d5bdbf26681c0c2"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}